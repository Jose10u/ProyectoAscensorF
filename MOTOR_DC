LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;

ENTITY MOTOR_DC IS
    PORT( 
        CLK     : IN STD_LOGIC;                     -- Reloj del sistema
        SW_DIR  : IN STD_LOGIC_VECTOR(1 downto 0);  -- Control de dirección: SW1 & SW0
        SW_SPEED: IN STD_LOGIC;                     -- Control de velocidad (SW2)
        PWM1    : OUT STD_LOGIC;                    -- Control motor terminal 1
        PWM2    : OUT STD_LOGIC                     -- Control motor terminal 2
    );
END MOTOR_DC;

ARCHITECTURE BEHAVIORAL OF MOTOR_DC IS
    SIGNAL COUNT : INTEGER RANGE 0 TO 50_000 := 0;
    SIGNAL SPEED : INTEGER := 0;
BEGIN

PROCESS(CLK, SW_DIR, SW_SPEED)
BEGIN
    -- Asignación de velocidad basada en SW_SPEED
    IF (SW_SPEED = '1') THEN
        SPEED <= 33_000;  -- Velocidad alta
    ELSE
        SPEED <= 45_000;  -- Velocidad baja
    END IF;

    IF (RISING_EDGE(CLK)) THEN
        -- Contador PWM
        COUNT <= COUNT + 1;
        IF (COUNT = 49_999) THEN
            COUNT <= 0;
        END IF;
        
        -- Control de dirección y PWM
        CASE SW_DIR IS
            WHEN "00" =>    -- Motor detenido
                PWM1 <= '0';
                PWM2 <= '0';
                
            WHEN "01" =>    -- Giro en un sentido
                IF (COUNT < SPEED) THEN
                    PWM1 <= '1';
                    PWM2 <= '0';
                ELSE
                    PWM1 <= '0';
                    PWM2 <= '0';
                END IF;
                
            WHEN "10" =>    -- Giro en sentido contrario
                IF (COUNT < SPEED) THEN
                    PWM1 <= '0';
                    PWM2 <= '1';
                ELSE
                    PWM1 <= '0';
                    PWM2 <= '0';
                END IF;
                
            WHEN OTHERS =>   -- Caso "11": motor detenido (seguridad)
                PWM1 <= '0';
                PWM2 <= '0';
        END CASE;
    END IF;
END PROCESS;

END BEHAVIORAL;
